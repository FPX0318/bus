server:
  servlet:
    context-path: /
  port: 80

spring:
  datasource:
#    driver-class-name: org.mariadb.jdbc.Driver
#    url: jdbc:mariadb://192.168.31.10:3306/busdata?useUnicode=true&characterEncoding=UTF-8
#    username: bus
#    password: 123@abc.com
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/busData?characterEncoding=utf8&useSSL=false
    username: root
    password: root
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl #按字段名字建表
    show-sql: true
    database: mysql
#    database-platform: org.hibernate.dialect.MariaDBDialect
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect

  thymeleaf:
    cache: false

  messages:
    basename: myconfig

  cache:
    time-to-live : 3600 #缓存过期时间
    cache-enable : false  #是否启用缓存
    redis-shiro: true  #是否启用redis缓存shiro， cache-enable为true的时候起作用
#     如果开启缓存@EnableCaching 默认的缓存是springboot的SimpleCache
#     如果引入redis等缓存后，就会用引入的缓存框架，如果不想用可以强制type:simple
#    type: simple
  redis:
    host: 192.168.31.10
    port: 6379
    password: 123456@abc.com
    timeout: 10000
    lettuce:
      pool:
        max-idle: 10
        max-active: 10
        min-idle: 5
        max-wait: 10000
    database: 0

  mqconfig:
    mq-enable: true #是否启用消息中间件

  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      bootstrap-servers: 192.168.44.10:9092  #,192.168.44.10:9093,192.168.44.10:9094
    bootstrap-servers: 192.168.44.10:9092   #,192.168.44.10:9093,192.168.44.10:9094
    topic:
      Name: home.bus.log2 #自定义topic名称
      numPartitions: 1  #自定义分区
      replicationFactor: 1 #自定义副本
    consumer:
      group-id: home.bus.log.group.1
      auto-offset-reset: latest
      enable-auto-commit: true
      auto-commit-interval: 20000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

elasticsearch:
  enable: false
  ip: 192.168.31.10:9200









